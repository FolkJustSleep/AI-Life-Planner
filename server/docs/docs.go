// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/ai_gen/ai_gen/{id}": {
            "get": {
                "description": "get Gennerated plan that generate by ai base on ai prompt that we create from base user input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Get AI gennerated plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/ai_gen/chat/{id}": {
            "get": {
                "description": "Get AI Chat history By userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Get AI Chat By userID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Sent the new message to AI Chat Assistant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Sent a new message to AI Chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AI Chat Data",
                        "name": "bodyHealthBackground",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.AIChatResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all history AI Chat By userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Delete AI Chat By userID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/ai_gen/create_ai_gen/{id}": {
            "post": {
                "description": "generate a new AI GenPlan base ai prompt that we create base on data that user input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Create a new AI GenPlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/ai_gen/goal/{id}": {
            "delete": {
                "description": "Delete AI goal that we generate from ai By ID of that goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ai Gen"
                ],
                "summary": "Delete AI GeneratedPlan By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GeneratedPlan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/lifegoals/add_lifegoal/{id}": {
            "post": {
                "description": "Create a new life goal for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Life Goal"
                ],
                "summary": "Create a new life goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Life Goal Data",
                        "name": "bodyLifeGoal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.LifeGoalBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/lifegoals/lifegoal/{id}": {
            "get": {
                "description": "Get life goals by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Life Goal"
                ],
                "summary": "Get life goals by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Life Goal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/lifegoals/lifegoals": {
            "get": {
                "description": "Get all life goals for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Life Goal"
                ],
                "summary": "Get all life goals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/lifegoals/update_lifegoal/{id}": {
            "patch": {
                "description": "Update life goal by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Life Goal"
                ],
                "summary": "Update life goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Life Goal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Life Goal Data",
                        "name": "bodyLifeGoal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.LifeGoalUpdateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/lifegoals/users/{id}": {
            "get": {
                "description": "Get life goals by User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Life Goal"
                ],
                "summary": "Get life goals by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/add_user/{id}": {
            "post": {
                "description": "Insert all user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Insert Userdata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Profile Data",
                        "name": "bodyUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UserProfileResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/finance_info": {
            "get": {
                "description": "Get finance records of all user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "Get All user finance records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/finance_info/{id}": {
            "get": {
                "description": "Get finance records by User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "Get finance records by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "create new finance records by User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Finance"
                ],
                "summary": "create new finance records by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Finance Data",
                        "name": "bodyFinance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.FinanceRespond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/habit/{id}": {
            "get": {
                "description": "Get Habits by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "Get Habit by UserId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Habits For User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Habits"
                ],
                "summary": "Create a new Habit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Habit Data",
                        "name": "bodyHealthBackground",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.HabitResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/health_background": {
            "get": {
                "description": "Get all health background data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Background"
                ],
                "summary": "Get All Health Background",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/health_background/{id}": {
            "get": {
                "description": "Get health background by User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Background"
                ],
                "summary": "Get Health Background by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new health background for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Background"
                ],
                "summary": "Create a new health background",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Health Background Data",
                        "name": "bodyHealthBackground",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.HealthBackgroundResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/mood": {
            "get": {
                "description": "Get all MoodData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mood"
                ],
                "summary": "Get all MoodData",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/mood/{id}": {
            "get": {
                "description": "Get MoodData by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mood"
                ],
                "summary": "Get MoodData by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Get MoodData by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mood"
                ],
                "summary": "Get MoodData by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mood Data",
                        "name": "bodyMood",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.MoodResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/schedule": {
            "get": {
                "description": "Get all schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all schedule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/schedule/{id}": {
            "get": {
                "description": "Get schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Get schedule by  ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scheadule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Create a new schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shcedule Data",
                        "name": "bodyUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.ScheduleResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/update_user/{id}": {
            "patch": {
                "description": "Update user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Userdata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Profile Data",
                        "name": "bodyUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.UserProfileResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/user/add_alldata/{id}": {
            "post": {
                "description": "Insert all data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Insert Userdata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All Data",
                        "name": "bodyUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.BodyData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/user/schedule/{id}": {
            "get": {
                "description": "Get schedule by User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Get schedule by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/user/{id}": {
            "get": {
                "description": "Get user data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get Userdata by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete every data by user id except user_profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete Userdata by userID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/users/users": {
            "get": {
                "description": "Get all user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all Userdata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/entities.ResponseModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.AIChatResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.BodyData": {
            "type": "object",
            "properties": {
                "allergies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "available_time": {
                    "type": "string"
                },
                "busy_days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currency": {
                    "type": "string"
                },
                "expenses": {
                    "type": "number"
                },
                "fitness_level": {
                    "type": "string"
                },
                "income": {
                    "type": "number"
                },
                "long_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "medical_conditions": {
                    "description": "Fullname  string    ` + "`" + `json:\"full_name\"` + "`" + `\nAge      int    ` + "`" + `json:\"age\"` + "`" + `\nWeight   float32    ` + "`" + `json:\"weight\"` + "`" + `\nHeight   float32    ` + "`" + `json:\"height\"` + "`" + `\nGender   string    ` + "`" + `json:\"gender\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "medications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preferred_times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "risk_tolerance": {
                    "type": "string"
                },
                "savings_goal": {
                    "type": "number"
                },
                "short_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sleep_pattern": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "work_hours": {
                    "type": "string"
                }
            }
        },
        "entities.FinanceRespond": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "expenses": {
                    "type": "number"
                },
                "income": {
                    "type": "number"
                },
                "risk_tolerance": {
                    "type": "string"
                },
                "savings_goal": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.HabitResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "completed_dates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "current_streak": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "target_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.HealthBackgroundResponse": {
            "type": "object",
            "properties": {
                "allergies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "fitness_level": {
                    "type": "string"
                },
                "medical_conditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "medications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sleep_pattern": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.LifeGoalBody": {
            "type": "object",
            "properties": {
                "long_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeframe": {
                    "type": "string"
                }
            }
        },
        "entities.LifeGoalUpdateBody": {
            "type": "object",
            "properties": {
                "long_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short_term": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeframe": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.MoodResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "mood": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.ResponseModel": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "entities.ScheduleResponse": {
            "type": "object",
            "properties": {
                "available_time": {
                    "type": "string"
                },
                "busy_days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "preferred_times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "work_hours": {
                    "type": "string"
                }
            }
        },
        "entities.UserProfileResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "humorous-colt-vital.ngrok-free.app",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fiber API AudioSum",
	Description:      "This is Ai-lifeplanner API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
